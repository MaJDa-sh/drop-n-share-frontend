{"ast":null,"code":"var _jsxFileName = \"/home/kacper/drop-n-share-frontend/src/pages/Home/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //Public API that will echo messages sent to it back to the client\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:8000');\n  const [users, setUsers] = useState([]);\n  const {\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useWebSocket(socketUrl);\n  useEffect(() => {\n    if (lastMessage !== null && lastMessage !== void 0 && lastMessage.data) {\n      let usersList = lastMessage.data.split(\"\\n\");\n      usersList.forEach(user => {\n        let found = false;\n        for (let i = 0; i < users.length; i++) {\n          if (user == users[i].id) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          try {\n            // const generateUser = async () => {\n            //   const response = await fetch(\"https://usernameapiv1.vercel.app/api/random-usernames\");\n            //   const data = await response.json();\n            //   const username = data.usernames[0];\n\n            //   setUsers((prevUsers) => [\n            //     ...prevUsers,\n            //     { id: user, username: username }\n            //   ]);\n            // }\n            // generateUser()\n            setUsers(prevUsers => [...prevUsers, {\n              id: user,\n              username: \"asd\"\n            }]);\n          } catch (error) {\n            console.error(\"Error fetching username:\", error);\n          }\n        } else {\n          return;\n        }\n      });\n      for (let i = 0; i < users.length; i++) {\n        let user = users[i];\n        let found = false;\n        for (let x = 0; x < usersList.length; x++) {\n          let usersListUser = usersList[x];\n          if (user.id == usersListUser) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          let newUsers = users.splice(i, 1);\n          setUsers(newUsers);\n        }\n      }\n    }\n  }, [lastMessage]);\n  useEffect(() => {\n    console.log(users);\n  }, [users]);\n  const handleClickSendMessage = useCallback(() => sendMessage('Hello'), []);\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyState];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickSendMessage,\n      disabled: readyState !== ReadyState.OPEN,\n      children: \"Click Me to send 'Hello'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"The WebSocket is currently \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), lastMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Last message: \", lastMessage.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kFw/42b44pblZ9juptUH1CCHfl0=\", false, function () {\n  return [useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useWebSocket","ReadyState","jsxDEV","_jsxDEV","App","_s","socketUrl","setSocketUrl","users","setUsers","sendMessage","lastMessage","readyState","data","usersList","split","forEach","user","found","i","length","id","prevUsers","username","error","console","x","usersListUser","newUsers","splice","log","handleClickSendMessage","connectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kacper/drop-n-share-frontend/src/pages/Home/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nconst App = () => {\n  //Public API that will echo messages sent to it back to the client\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:8000');\n  const [users, setUsers] = useState([])\n\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);\n\n  useEffect(() => {\n    if (lastMessage?.data) {\n      let usersList = lastMessage.data.split(\"\\n\")\n\n      usersList.forEach((user) => {\n        \n        let found = false;\n\n        for (let i = 0; i < users.length; i++) {\n          if (user == users[i].id) {\n            found = true;\n            break;\n          }\n        }\n        \n        if (!found) {\n          try {\n            // const generateUser = async () => {\n            //   const response = await fetch(\"https://usernameapiv1.vercel.app/api/random-usernames\");\n            //   const data = await response.json();\n            //   const username = data.usernames[0];\n    \n            //   setUsers((prevUsers) => [\n            //     ...prevUsers,\n            //     { id: user, username: username }\n            //   ]);\n            // }\n            // generateUser()\n            setUsers((prevUsers) => [\n              ...prevUsers,\n              { id: user, username: \"asd\" }\n            ]);\n          } catch (error) {\n            console.error(\"Error fetching username:\", error);\n          }\n        } else {\n          return\n        }\n      });\n\n      for (let i = 0; i<users.length; i++) {\n        let user = users[i]\n        \n        let found = false\n\n        for (let x = 0; x<usersList.length; x++) {\n          let usersListUser=usersList[x]\n          if (user.id == usersListUser) {\n            found = true\n            break\n          }\n        }\n        if (!found) {\n          let newUsers = users.splice(i, 1)\n          setUsers(newUsers)\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  useEffect(() => {\n    console.log(users)\n  }, [users])\n\n  const handleClickSendMessage = useCallback(() => sendMessage('Hello'), []);\n\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  return (\n    <div>\n      <button\n        onClick={handleClickSendMessage}\n        disabled={readyState !== ReadyState.OPEN}\n      >\n        Click Me to send 'Hello'\n      </button>\n      <span>The WebSocket is currently {connectionStatus}</span>\n      {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}\n      <ul>\n      </ul>\n    </div>\n  );\n};\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}