{"ast":null,"code":"import { useSyncExternalStore } from './react-deps.js';\n\n// array of callback subscribed to hash updates\nconst listeners = {\n  v: []\n};\nconst onHashChange = () => listeners.v.forEach(cb => cb());\n\n// we subscribe to `hashchange` only once when needed to guarantee that\n// all listeners are called synchronously\nconst subscribeToHashUpdates = callback => {\n  if (listeners.v.push(callback) === 1) addEventListener(\"hashchange\", onHashChange);\n  return () => {\n    listeners.v = listeners.v.filter(i => i !== callback);\n    if (!listeners.v.length) removeEventListener(\"hashchange\", onHashChange);\n  };\n};\n\n// leading '#' is ignored, leading '/' is optional\nconst currentHashLocation = () => \"/\" + location.hash.replace(/^#?\\/?/, \"\");\nconst navigate = (to, {\n  state = null\n} = {}) => {\n  // calling `replaceState` allows us to set the history\n  // state without creating an extra entry\n  const [hash, search] = to.replace(/^#?\\/?/, \"\").split(\"?\");\n  history.replaceState(state, \"\",\n  // keep the current pathname, but replace query string and hash\n  location.pathname + (search ? `?${search}` : location.search) + (\n  // update location hash, this will cause `hashchange` event to fire\n  // normalise the value before updating, so it's always preceeded with \"#/\"\n  location.hash = `#/${hash}`));\n};\nconst useHashLocation = ({\n  ssrPath = \"/\"\n} = {}) => [useSyncExternalStore(subscribeToHashUpdates, currentHashLocation, () => ssrPath), navigate];\nuseHashLocation.hrefs = href => \"#\" + href;\nexport { navigate, useHashLocation };","map":{"version":3,"names":["useSyncExternalStore","listeners","v","onHashChange","forEach","cb","subscribeToHashUpdates","callback","push","addEventListener","filter","i","length","removeEventListener","currentHashLocation","location","hash","replace","navigate","to","state","search","split","history","replaceState","pathname","useHashLocation","ssrPath","hrefs","href"],"sources":["/home/kacper/drop-n-share-frontend/node_modules/wouter/esm/use-hash-location.js"],"sourcesContent":["import { useSyncExternalStore } from './react-deps.js';\n\n// array of callback subscribed to hash updates\nconst listeners = {\n  v: [],\n};\n\nconst onHashChange = () => listeners.v.forEach((cb) => cb());\n\n// we subscribe to `hashchange` only once when needed to guarantee that\n// all listeners are called synchronously\nconst subscribeToHashUpdates = (callback) => {\n  if (listeners.v.push(callback) === 1)\n    addEventListener(\"hashchange\", onHashChange);\n\n  return () => {\n    listeners.v = listeners.v.filter((i) => i !== callback);\n    if (!listeners.v.length) removeEventListener(\"hashchange\", onHashChange);\n  };\n};\n\n// leading '#' is ignored, leading '/' is optional\nconst currentHashLocation = () => \"/\" + location.hash.replace(/^#?\\/?/, \"\");\n\nconst navigate = (to, { state = null } = {}) => {\n  // calling `replaceState` allows us to set the history\n  // state without creating an extra entry\n  const [hash, search] = to.replace(/^#?\\/?/, \"\").split(\"?\");\n\n  history.replaceState(\n    state,\n    \"\",\n    // keep the current pathname, but replace query string and hash\n    location.pathname +\n      (search ? `?${search}` : location.search) +\n      // update location hash, this will cause `hashchange` event to fire\n      // normalise the value before updating, so it's always preceeded with \"#/\"\n      (location.hash = `#/${hash}`)\n  );\n};\n\nconst useHashLocation = ({ ssrPath = \"/\" } = {}) => [\n  useSyncExternalStore(\n    subscribeToHashUpdates,\n    currentHashLocation,\n    () => ssrPath\n  ),\n  navigate,\n];\n\nuseHashLocation.hrefs = (href) => \"#\" + href;\n\nexport { navigate, useHashLocation };\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,iBAAiB;;AAEtD;AACA,MAAMC,SAAS,GAAG;EAChBC,CAAC,EAAE;AACL,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAMF,SAAS,CAACC,CAAC,CAACE,OAAO,CAAEC,EAAE,IAAKA,EAAE,CAAC,CAAC,CAAC;;AAE5D;AACA;AACA,MAAMC,sBAAsB,GAAIC,QAAQ,IAAK;EAC3C,IAAIN,SAAS,CAACC,CAAC,CAACM,IAAI,CAACD,QAAQ,CAAC,KAAK,CAAC,EAClCE,gBAAgB,CAAC,YAAY,EAAEN,YAAY,CAAC;EAE9C,OAAO,MAAM;IACXF,SAAS,CAACC,CAAC,GAAGD,SAAS,CAACC,CAAC,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,QAAQ,CAAC;IACvD,IAAI,CAACN,SAAS,CAACC,CAAC,CAACU,MAAM,EAAEC,mBAAmB,CAAC,YAAY,EAAEV,YAAY,CAAC;EAC1E,CAAC;AACH,CAAC;;AAED;AACA,MAAMW,mBAAmB,GAAGA,CAAA,KAAM,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;AAE3E,MAAMC,QAAQ,GAAGA,CAACC,EAAE,EAAE;EAAEC,KAAK,GAAG;AAAK,CAAC,GAAG,CAAC,CAAC,KAAK;EAC9C;EACA;EACA,MAAM,CAACJ,IAAI,EAAEK,MAAM,CAAC,GAAGF,EAAE,CAACF,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACK,KAAK,CAAC,GAAG,CAAC;EAE1DC,OAAO,CAACC,YAAY,CAClBJ,KAAK,EACL,EAAE;EACF;EACAL,QAAQ,CAACU,QAAQ,IACdJ,MAAM,GAAG,IAAIA,MAAM,EAAE,GAAGN,QAAQ,CAACM,MAAM,CAAC;EACzC;EACA;EACCN,QAAQ,CAACC,IAAI,GAAG,KAAKA,IAAI,EAAE,CAChC,CAAC;AACH,CAAC;AAED,MAAMU,eAAe,GAAGA,CAAC;EAAEC,OAAO,GAAG;AAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAClD3B,oBAAoB,CAClBM,sBAAsB,EACtBQ,mBAAmB,EACnB,MAAMa,OACR,CAAC,EACDT,QAAQ,CACT;AAEDQ,eAAe,CAACE,KAAK,GAAIC,IAAI,IAAK,GAAG,GAAGA,IAAI;AAE5C,SAASX,QAAQ,EAAEQ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}