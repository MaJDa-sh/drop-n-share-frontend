{"ast":null,"code":"var _jsxFileName = \"/home/kacper/drop-n-share-frontend/src/pages/Home/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for users and messages\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [socketUrlUsers] = useState('ws://localhost:8000/users'); // WebSocket URL for users\n  const [socketUrlRoom] = useState('ws://localhost:8000/room/1'); // WebSocket URL for room messages\n\n  // WebSocket for users\n  const {\n    lastMessage: lastMessageUsers,\n    readyState: readyStateUsers\n  } = useWebSocket(socketUrlUsers);\n\n  // WebSocket for messages\n  const {\n    sendMessage,\n    lastMessage: lastMessageRoom,\n    readyState: readyStateRoom\n  } = useWebSocket(socketUrlRoom);\n\n  // Handle the messages and update state accordingly\n  useEffect(() => {\n    if (lastMessageUsers !== null && lastMessageUsers !== void 0 && lastMessageUsers.data) {\n      const usersList = lastMessageUsers.data.split(\"\\n\");\n      const fetchUsernames = async () => {\n        const newUsers = [];\n        for (const user of usersList) {\n          let found = false;\n          for (let i = 0; i < users.length; i++) {\n            if (user === users[i].id) {\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            try {\n              const response = await fetch(\"https://usernameapiv1.vercel.app/api/random-usernames\");\n              const data = await response.json();\n              const username = data.usernames[0];\n              newUsers.push({\n                id: user,\n                username: username\n              });\n            } catch (error) {\n              console.error(\"Error fetching username:\", error);\n            }\n          }\n        }\n        setUsers(prevUsers => [...prevUsers, ...newUsers]);\n        setUsers(prevUsers => {\n          const filteredUsers = prevUsers.filter(user => usersList.includes(user.id));\n          return filteredUsers;\n        });\n      };\n      fetchUsernames();\n    }\n  }, [lastMessageUsers]);\n\n  // Handle new messages from the room\n  useEffect(() => {\n    if (lastMessageRoom !== null && lastMessageRoom !== void 0 && lastMessageRoom.data) {\n      const newMessage = lastMessageRoom.data;\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n  }, [lastMessageRoom]);\n\n  // Send a message to the room\n  const handleSendMessage = useCallback(() => {\n    sendMessage('Hello from the room!');\n  }, [sendMessage]);\n  const connectionStatusUsers = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyStateUsers];\n  const connectionStatusRoom = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyStateRoom];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Users (\", connectionStatusUsers, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"64\",\n          height: \"64\",\n          fill: \"currentColor\",\n          className: \"bi bi-person-circle\",\n          viewBox: \"0 0 16 16\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room Messages (\", connectionStatusRoom, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      disabled: readyStateRoom !== ReadyState.OPEN,\n      children: \"Send 'Hello from the room'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ncPQ7rcLpNKr1vTWDXChLdqpzrg=\", false, function () {\n  return [useWebSocket, useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useWebSocket","ReadyState","jsxDEV","_jsxDEV","App","_s","users","setUsers","messages","setMessages","socketUrlUsers","socketUrlRoom","lastMessage","lastMessageUsers","readyState","readyStateUsers","sendMessage","lastMessageRoom","readyStateRoom","data","usersList","split","fetchUsernames","newUsers","user","found","i","length","id","response","fetch","json","username","usernames","push","error","console","prevUsers","filteredUsers","filter","includes","newMessage","prevMessages","handleSendMessage","connectionStatusUsers","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","connectionStatusRoom","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","xmlns","width","height","fill","viewBox","d","fillRule","message","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/kacper/drop-n-share-frontend/src/pages/Home/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport \"./App.scss\"\n\nconst App = () => {\n  // State for users and messages\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [socketUrlUsers] = useState('ws://localhost:8000/users'); // WebSocket URL for users\n  const [socketUrlRoom] = useState('ws://localhost:8000/room/1'); // WebSocket URL for room messages\n  \n  // WebSocket for users\n  const { lastMessage: lastMessageUsers, readyState: readyStateUsers } = useWebSocket(socketUrlUsers);\n  \n  // WebSocket for messages\n  const { sendMessage, lastMessage: lastMessageRoom, readyState: readyStateRoom } = useWebSocket(socketUrlRoom);\n\n  // Handle the messages and update state accordingly\n  useEffect(() => {\n    if (lastMessageUsers?.data) {\n      const usersList = lastMessageUsers.data.split(\"\\n\");\n\n      const fetchUsernames = async () => {\n        const newUsers = [];\n        for (const user of usersList) {\n          let found = false;\n          \n          for (let i = 0; i < users.length; i++) {\n            if (user === users[i].id) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            try {\n              const response = await fetch(\"https://usernameapiv1.vercel.app/api/random-usernames\");\n              const data = await response.json();\n              const username = data.usernames[0];\n\n              newUsers.push({ id: user, username: username });\n            } catch (error) {\n              console.error(\"Error fetching username:\", error);\n            }\n          }\n        }\n\n        setUsers((prevUsers) => [\n          ...prevUsers,\n          ...newUsers,\n        ]);\n\n        setUsers((prevUsers) => {\n          const filteredUsers = prevUsers.filter(user => usersList.includes(user.id));\n          return filteredUsers;\n        });\n      };\n\n      fetchUsernames();\n    }\n  }, [lastMessageUsers]);\n\n  // Handle new messages from the room\n  useEffect(() => {\n    if (lastMessageRoom?.data) {\n      const newMessage = lastMessageRoom.data;\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n    }\n  }, [lastMessageRoom]);\n\n  // Send a message to the room\n  const handleSendMessage = useCallback(() => {\n    sendMessage('Hello from the room!');\n  }, [sendMessage]);\n\n  const connectionStatusUsers = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyStateUsers];\n\n  const connectionStatusRoom = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyStateRoom];\n\n  return (\n    <div>\n      <h2>Users ({connectionStatusUsers})</h2>\n      <div className='users'>\n        {users.map((user) => (\n          <div className=\"user\" key={user.id}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" fill=\"currentColor\" className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\n              <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0\"/>\n              <path fillRule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1\"/>\n            </svg>\n            <p>{user.username}</p>\n          </div>\n        ))}\n      </div>\n\n      <h2>Room Messages ({connectionStatusRoom})</h2>\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"message\">\n            <p>{message}</p>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleSendMessage} disabled={readyStateRoom !== ReadyState.OPEN}>\n        Send 'Hello from the room'\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}